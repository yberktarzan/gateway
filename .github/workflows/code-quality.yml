name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Validate Semantic Commit Messages
      uses: amannn/action-semantic-pull-request@v5
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          test
          chore
          perf
          ci
          build
          revert
        requireScope: false
        subjectPattern: ^.{1,50}$
        subjectPatternError: |
          The subject "{subject}" found in the pull request title "{title}"
          didn't match the configured pattern. Please ensure that the subject
          is maximum 50 characters long.
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: none
        
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Get changed PHP files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          **/*.php
        files_ignore: |
          vendor/**
          bootstrap/cache/**
          storage/**
          
    - name: Run Pint on changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "Changed PHP files:"
        echo "${{ steps.changed-files.outputs.all_changed_files }}"
        
        # Run Pint only on changed files
        ./vendor/bin/pint ${{ steps.changed-files.outputs.all_changed_files }} --test
        
    - name: Run PHPStan on changed files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        # Run PHPStan only on changed files
        ./vendor/bin/phpstan analyse ${{ steps.changed-files.outputs.all_changed_files }} --no-progress --error-format=github
